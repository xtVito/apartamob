apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'tomcat'
apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'jetty'
apply plugin:'application'


ext {
    springVersion = "4.1.5.RELEASE"
    h2Version = "1.3.155"
    springDataVersion = "1.1.0.RELEASE"
    springSocialVersion = "1.0.2.RELEASE"
    springSocialFacebookVersion = "1.0.1.RELEASE"
    springSocialTwitterVersion = "1.0.2.RELEASE"
    springSecurity = "3.1.2.RELEASE"
    springIntegrationVersion = "4.1.2.RELEASE"
    aspectjrtVersion = "1.6.11"
    jacksonVersion = "1.9.3"
    commonsIoVersion = "1.4"
    jerseyVersion = "1.9.1"
    hibernateVersion = "3.6.7.Final"
    h2Version = "1.3.154"
    slf4jVersion = "1.6.1"
    logbackVersion = "1.0.1"
    velocityVersion = "1.7"
    groovyVersion = "2.0.0"
    guavaVersion = "12.0"
    hibernateValidatorVersion = "4.3.1.Final"
    environmentBase = 'src/main/config/'
    env = "ci"
    tomcatVersion = '7.0.25'

}

configurations {
    emma
}


buildscript {

    repositories {
        mavenCentral()
        jcenter()

    }

    dependencies {

        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'

    }
}

repositories {
    mavenCentral()
    maven {
        url "http://maven.springframework.org/milestone"
    }
}

// A list of all of our project dependencies.
dependencies {

    compile "org.hibernate:hibernate-core:$hibernateVersion",
            "org.hibernate:hibernate-entitymanager:$hibernateVersion",
            "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final",
            "org.hibernate:hibernate-validator:4.1.0.Final",
            "org.springframework.data:spring-data-jpa:$springDataVersion",
            "com.h2database:h2:$h2Version",
            "mysql:mysql-connector-java:5.1.16",
            "commons-dbcp:commons-dbcp:1.3",
            "commons-codec:commons-codec:1.6",
            "org.springframework.security:spring-security-core:$springSecurity",

            "org.aspectj:aspectjrt:$aspectjrtVersion",
            "org.codehaus.jackson:jackson-core-asl:$jacksonVersion",
            "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion",
            "org.codehaus.jackson:jackson-xc:$jacksonVersion",
            "commons-io:commons-io:$commonsIoVersion",
            "javax.ws.rs:jsr311-api:1.1",
            "javax.annotation:jsr250-api:1.0",
            "com.sun.jersey:jersey-core:$jerseyVersion",
            "com.sun.jersey:jersey-server:$jerseyVersion",
            "com.sun.jersey:jersey-json:$jerseyVersion",
            "com.sun.jersey.contribs:jersey-spring:$jerseyVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-aop:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.springframework:spring-aspects:$springVersion",
            "org.aspectj:aspectjweaver:1.5.4",
            "cglib:cglib:2.2",
            "com.google.guava:guava:$guavaVersion",
            "org.hibernate:hibernate-validator:$hibernateValidatorVersion",
            "javax.validation:validation-api:1.1.0.Final",

            "org.slf4j:slf4j-api:$slf4jVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "ch.qos.logback:logback-core:$logbackVersion",
            "org.mockito:mockito-all:1.8.5",

            "org.springframework.integration:spring-integration-core:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-jdbc:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-mail:$springIntegrationVersion",
            "org.springframework.integration:spring-integration-http:$springIntegrationVersion",
            "org.apache.velocity:velocity:$velocityVersion",
            "javax.mail:mail:1.4.5",
            "joda-time:joda-time:2.1",
            "commons-lang:commons-lang:2.6",
            "commons-cli:commons-cli:1.2",
            'org.eclipse.jetty:jetty-servlet:7.4.5.v20110725'

    // Pull in test-time dependencies.
    testCompile "junit:junit:4.12",
            "org.springframework:spring-test:$springVersion",
            //"org.codehaus.groovy.modules.http-builder:http-builder:0.5.2",
            //"org.codehaus.groovy:groovy-all:$groovyVersion",
            "org.hamcrest:hamcrest-all:1.1",



            "com.sun.jersey:jersey-test-framework:$jerseyVersion",
            "com.sun.jersey.jersey-test-framework:jersey-test-framework-grizzly2:$jerseyVersion",
            "com.sun.jersey.jersey-test-framework:jersey-test-framework-core:$jerseyVersion",
            "com.sun.jersey:jersey-grizzly2:$jerseyVersion",
            "org.glassfish.grizzly:grizzly-http:2.1.2",
            "org.glassfish.gmbal:gmbal-api-only:3.0.0-b023",
            "org.glassfish.external:management-api:3.0.0-b012",
            "org.glassfish.grizzly:grizzly-http-server:2.1.2",
            "org.glassfish.grizzly:grizzly-rcm:2.1.2",
            "org.glassfish.grizzly:grizzly-http-servlet:2.1.2",
            "org.glassfish:javax.servlet:3.1",
            "com.sun.jersey:jersey-client:$jerseyVersion"

    testCompile("org.codehaus.groovy.modules.http-builder:http-builder:0.5.2") {
        exclude group: 'org.codehaus.groovy'
    }
    testCompile "org.codehaus.groovy:groovy-all:2.0.0"



    providedCompile "javax.servlet:servlet-api:2.5"


    // Pull in tomcat dependencies

    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: "org.eclipse.jdt.core.compiler", module: "ecj"
    }

    emma "emma:emma:2.1.5320"
    emma "emma:emma_ant:2.1.5320"

}

war {
    baseName = "amapi"
}


test {
    exclude("**/*IntegrationTest*")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task stage(dependsOn: ['clean', 'installApp'])


jettyRun {
    contextPath = ''
    scanIntervalSeconds = 2
}